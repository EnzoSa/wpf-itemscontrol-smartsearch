<Window x:Class="dotnetexplorer.blog.com.WPFIcRtSandFc.SampleApp.Sample" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit" xmlns:SampleApp="clr-namespace:dotnetexplorer.blog.com.WPFIcRtSandFc.SampleApp" xmlns:SmartSearch="clr-namespace:dotnetexplorer.blog.com.WPFIcRtSandFc.SmartSearch;assembly=dotnetexplorer.blog.com.WPFIcRtSandFc" xmlns:System="clr-namespace:System;assembly=mscorlib" Title="Window1" Height="Auto" Width="1024">

    <TabControl>
        <TabItem  Header="Static data">
            <Grid>

                <Grid.Resources>
                    <SampleApp:SampleStringConverter x:Key="strConv" />
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition Width="0.5*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Grid.ColumnSpan="2">
                    <TextBlock Margin="0,10,0,0" Text="This smart search contains 5 scopes and thus filter at the same time the big strategy datagrid, the strategy list box, the markets datagrid, the string listbox and the int combobox " TextWrapping="Wrap"></TextBlock>
                    <SmartSearch:SmartSearchRoot x:Name="ss1" Margin=" 5,0,5,0" LayoutOption="Minimal">
                        <!--Scope used to filter strategies adapters datagrid -->
                        <SmartSearch:SmartSearchScope DataControl="{Binding ElementName=executionStrategyBlotter}" UnderlyingType="{x:Type SampleApp:StrategyAdapter}"></SmartSearch:SmartSearchScope>

                        <!--Scope used to filter strategies adapters listbox -->
                        <SmartSearch:SmartSearchScope DataControl="{Binding ElementName=executionStrategyList}" UnderlyingType="{x:Type SampleApp:StrategyAdapter}">
                            <SmartSearch:PropertyFilter FieldName="SendTime" />
                            <SmartSearch:PropertyFilter FieldName="StratStat" />
                            <SmartSearch:PropertyFilter FieldName="Markets" />
                        </SmartSearch:SmartSearchScope>

                        <!--Scope used to filter market adapters datagrid -->
                        <SmartSearch:SmartSearchScope DataControl="{Binding ElementName=marketsBlotter}" UnderlyingType="{x:Type SampleApp:MarketAdapter}">
                            <SmartSearch:PropertyFilter FieldName="Name" />
                            <SmartSearch:PropertyFilter FieldName="Liquidity" />
                            <SmartSearch:PropertyFilter FieldName="Type" />
                        </SmartSearch:SmartSearchScope>

                        <!--Scope used to filter native string listbox -->
                        <!--Scope primitive types accepts only one or zero AdvancedPropertyFilter -->
                        <!--If you dont need to apply a string format or a converter, you don't need one -->
                        <SmartSearch:SmartSearchScope DataControl="{Binding ElementName=stringList}" UnderlyingType="{x:Type System:String}">
                            <SmartSearch:ValueFilter ValueConverter="{StaticResource strConv}" />

                        </SmartSearch:SmartSearchScope>

                        <!--Scope used to filter native int combobox -->
                        <SmartSearch:SmartSearchScope DataControl="{Binding ElementName=intList}" UnderlyingType="{x:Type System:Int32}" />
                    </SmartSearch:SmartSearchRoot>
                </StackPanel>
                <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Margin="10,0,10,0">
                    <TextBlock Margin="0,10,0,0" Text="Big strategies datagrid" TextWrapping="Wrap"></TextBlock>
                    <Controls:DataGrid x:Name="executionStrategyBlotter" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="True" ItemsSource="{Binding DataSourceStrategies}" Grid.ColumnSpan="2"></Controls:DataGrid>
                </StackPanel>
                <StackPanel Grid.Row="2" Grid.Column="0" Margin="10,0,10,0">
                    <TextBlock Margin="0,10,0,0" Text="strategies list box" TextWrapping="Wrap"></TextBlock>
                    <ListBox x:Name="executionStrategyList" ItemsSource="{Binding DataSourceStrategies}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding SendTime}" Margin="2"></TextBlock>
                                    <TextBlock Text="{Binding Markets}" Margin="2"></TextBlock>
                                    <TextBlock Text="{Binding StratStat}" Margin="2"></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
                <StackPanel Grid.Row="2" Grid.Column="1" Margin="10,0,10,0">
                    <TextBlock Margin="0,10,0,0" Text="markets listbox" TextWrapping="Wrap"></TextBlock>
                    <ListBox x:Name="marketsBlotter" ItemsSource="{Binding DataSourceMarkets}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name}" />
							<TextBlock Text="{Binding Type, StringFormat=' ({0}) : '}" />
							<TextBlock Text="{Binding Liquidity}" />
						</StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>

                <StackPanel Grid.Row="4" Grid.Column="0" Margin="10,0,10,0">
                    <TextBlock Margin="0,10,0,0" Text="string listbox" TextWrapping="Wrap"></TextBlock>
                    <ListBox x:Name="stringList" MaxHeight="150" ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding DataSourceString}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding ., Converter={StaticResource strConv}}" Margin="2"></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
                <StackPanel Grid.Row="4" Grid.Column="1" Margin="10,0,10,0">
                    <TextBlock Margin="0,10,0,0" Text="int combobox" TextWrapping="Wrap"></TextBlock>
                    <ComboBox x:Name="intList" ItemsSource="{Binding DataSourceInt}" VerticalAlignment="Top">
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                </StackPanel>

                <StackPanel Grid.Row="5" Grid.ColumnSpan="2">
                    <TextBlock Margin="0,10,0,0" Text="This smart search contains only one scope and thus filter only the treeview. The treeview is binded on the same list than the strategies datagrid, thus this list is filtered by two different components without any interferences" TextWrapping="Wrap"></TextBlock>
                    <SmartSearch:SmartSearchRoot x:Name="ss2" Margin=" 5,0,5,0" LayoutOption="Intemediate">
                        <SmartSearch:SmartSearchScope DataControl="{Binding ElementName=strategyTreeView}" UnderlyingType="{x:Type SampleApp:StrategyAdapter}">
                            <SmartSearch:PropertyFilter FieldName="SendTime" TextFormat="dd/MM hh:mm:ss.fff" />

                        </SmartSearch:SmartSearchScope>
                    </SmartSearch:SmartSearchRoot>
                </StackPanel>
                <TreeView Margin="10,0,10,0" x:Name="strategyTreeView" 
                  Background="LightCoral" Grid.Row="6" Grid.ColumnSpan="2" 
                  ItemsSource="{Binding DataSourceStrategies}" DisplayMemberPath="SendTime" ItemStringFormat="dd/MM hh:mm:ss.fff" />


            </Grid>
        </TabItem>
        <TabItem Header="Real time data">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width=".8*"/>
                    <ColumnDefinition Width=".2*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <Button Command="{Binding StartPooling}" Margin="5"  Content="Start pooling items"/>
                    <Button Command="{Binding StopPooling}" Margin="5" Content="Stop pooling items"/>
                    <Button Command="{Binding ClearData}" Margin="5" Content="Clear Data"/>
                </StackPanel>
                <SmartSearch:SmartSearchRoot Grid.Row="1" x:Name="ssrt" Margin=" 5,0,5,0" LayoutOption="Basic">
                    <!--Scope used to filter strategies adapters datagrid -->
                    <SmartSearch:SmartSearchScope DataControl="{Binding ElementName=executionStrategyBlotter_pooling}" 
                                                  UnderlyingType="{x:Type SampleApp:StrategyAdapter}">

                        <SmartSearch:PropertyFilter FieldName="SendTime" />
                        <SmartSearch:PropertyFilter FieldName="StratStat" MonitorPropertyChanged="True"/>
                        <SmartSearch:PropertyFilter FieldName="StratType" />
                        <SmartSearch:PropertyFilter FieldName="Dir"/>
                        <SmartSearch:PropertyFilter FieldName="Message" MonitorPropertyChanged="True"/>
                        <SmartSearch:PropertyFilter FieldName="Product" />
                        <SmartSearch:PropertyFilter FieldName="ExecutedAmount" MonitorPropertyChanged="True"/>
                        <SmartSearch:PropertyFilter FieldName="RequestedAmount" />
                        <SmartSearch:PropertyFilter FieldName="ExecutedPrice" MonitorPropertyChanged="True"/>
                        <SmartSearch:PropertyFilter FieldName="RequestedPrice" />
                        <SmartSearch:PropertyFilter FieldName="Markets" />
                    </SmartSearch:SmartSearchScope>

                </SmartSearch:SmartSearchRoot>
                <ScrollViewer x:Name="pooling"  Grid.Row="2">
                    <Controls:DataGrid x:Name="executionStrategyBlotter_pooling" 
                           CanUserAddRows="False"
                           CanUserDeleteRows="False" 
                           AutoGenerateColumns="false"
                           ItemsSource="{Binding RealTimeDataSourceStrategies}"
                                        VirtualizingStackPanel.IsVirtualizing="True"
                                       >
                        <Controls:DataGrid.Columns>
                            <Controls:DataGridTextColumn Binding="{Binding Path=SendTime}" Header="SendTime"/>
                            <Controls:DataGridTextColumn Binding="{Binding Path=StratStat}" Header="StratStat">
                                <Controls:DataGridTextColumn.CellStyle>
                                    <Style TargetType="{x:Type Controls:DataGridCell}">
                                        <Setter Property="DataContext" Value="{Binding ., RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:DataGridRow}}}" />
                                        <Setter Property="Background" Value="Transparent" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding StratStat}" Value="{x:Static SampleApp:StrategyStatus.Done}">
                                                <Setter Property="Background" Value="Green" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding StratStat}" Value="{x:Static SampleApp:StrategyStatus.InError}">
                                                <Setter Property="Background" Value="IndianRed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding StratStat}" Value="{x:Static SampleApp:StrategyStatus.Cancelled}">
                                                <Setter Property="Background" Value="DarkOrange" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Controls:DataGridTextColumn.CellStyle>
                            </Controls:DataGridTextColumn>
                            <Controls:DataGridTextColumn Binding="{Binding Path=StratType}" Header="StratType"/>
                            <Controls:DataGridTextColumn Binding="{Binding Path=Dir}" Header="Direction">
                                <Controls:DataGridTextColumn.CellStyle>
                                    <Style TargetType="{x:Type Controls:DataGridCell}">
                                        <Setter Property="DataContext" Value="{Binding ., RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:DataGridRow}}}" />
                                        <Setter Property="Background" Value="Transparent" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Dir}" Value="{x:Static SampleApp:Direction.Sell}">
                                                <Setter Property="Background" Value="LightYellow" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Dir}" Value="{x:Static SampleApp:Direction.Buy}">
                                                <Setter Property="Background" Value="LightBlue" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Controls:DataGridTextColumn.CellStyle>
                            </Controls:DataGridTextColumn>
                            <Controls:DataGridTextColumn Binding="{Binding Path=Message}" Header="Message" />
                            <Controls:DataGridTextColumn Binding="{Binding Path=Product}" Header="Ccy pair"/>
                            <Controls:DataGridTextColumn Binding="{Binding Path=ExecutedAmount}" Header="ExecutedAmount"/>
                            <Controls:DataGridTextColumn Binding="{Binding Path=RequestedAmount}" Header="RequestedAmount"/>
                            <Controls:DataGridTextColumn Binding="{Binding Path=ExecutedPrice}" Header="ExecutedPrice"/>
                            <Controls:DataGridTextColumn Binding="{Binding Path=RequestedPrice}" Header="RequestedPrice"/>
                            <Controls:DataGridTextColumn Binding="{Binding Path=Markets}" Header="Markets"/>
                            <Controls:DataGridTextColumn Binding="{Binding Path=IsManual}" Header="Manually inserted"/>

                        </Controls:DataGrid.Columns>

                    </Controls:DataGrid>
                </ScrollViewer>
                <Grid Grid.Row="2" Grid.Column="1" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.6*"/>
                        <ColumnDefinition Width="0.4*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <TextBlock Text="Status" Grid.Row="0"/>
                    <TextBlock Text="Type" Grid.Row="1"/>
                    <TextBlock Text="Direction" Grid.Row="2"/>
                    <TextBlock Text="Message" Grid.Row="3"/>
                    <TextBlock Text="Product" Grid.Row="4"/>
                    <TextBlock Text="ExecutedAmount" Grid.Row="5"/>
                    <TextBlock Text="RequestedAmount" Grid.Row="6"/>
                    <TextBlock Text="ExecutedPrice" Grid.Row="7"/>
                    <TextBlock Text="RequestedPrice" Grid.Row="8"/>
                    <TextBlock Text="Markets" Grid.Row="9"/>
                    
                                    
                    <ComboBox ItemsSource="{Binding  StrategyStatusReferential}" SelectedItem="{Binding  ManualItem.StratStat, Mode=TwoWay}"  Grid.Row="0" Grid.Column="1"/>
                    <ComboBox ItemsSource="{Binding  StrategyTypesReferential}" SelectedItem="{Binding  ManualItem.StratType, Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>
                    <ComboBox ItemsSource="{Binding  DirectionReferential}" SelectedItem="{Binding  ManualItem.Dir, Mode=TwoWay}" Grid.Row="2" Grid.Column="1"/>
                       <TextBox Grid.Row="3" Text="{Binding ManualItem.Message, Mode=TwoWay}" Grid.Column="1"/>
                    <ComboBox ItemsSource="{Binding ProductsReferential}" SelectedItem="{Binding  ManualItem.Product, Mode=TwoWay}" Grid.Row="4" Grid.Column="1"/>
                   <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding ManualItem.ExecutedAmount, Mode=TwoWay}"/>
                   <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding ManualItem.RequestedAmount, Mode=TwoWay}"/>
                   <TextBox Grid.Row="7" Grid.Column="1" Text="{Binding ManualItem.ExecutedPrice, Mode=TwoWay}"/>
                    <TextBox Grid.Row="8" Grid.Column="1" Text="{Binding ManualItem.RequestedPrice, Mode=TwoWay}"/>
                   <ComboBox ItemsSource="{Binding  LstMarkets}" SelectedItem="{Binding  ManualItem.Markets, Mode=TwoWay}" Grid.Row="9" Grid.Column="1"/>
                    
                    <Button Content="INSERT !" Command="{Binding InsertItem}" Grid.Row="10"  Grid.Column="1"/>
                    
                </Grid>
                <TextBox VerticalScrollBarVisibility="Auto" IsReadOnly="True" Text="{Binding Logs}" Grid.Row="3" Grid.ColumnSpan="2"/>
            </Grid>
        </TabItem>
    </TabControl>

</Window>